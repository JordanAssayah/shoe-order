swagger: "2.0"
info:
  version: "1.0.0"
  title: Shoe Order API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/x-www-form-urlencoded
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /customers:
    x-swagger-router-controller: customer_controller
    get:
      tags: ["customers"]
      summary: Returns all created customers with the basic informations
      operationId: getAllCustomers
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GetCustomersListResponse"
    post:
      tags: ["customers"]
      summary: Create a new customer
      operationId: createCustomer
      parameters:
        - name: username
          description: Can be anything you want
          in: formData
          required: true
          type: string
        - name: password
          description: At least 8 chars
          in: formData
          required: true
          type: string
        - name: firstname
          description: Firstame of the new customer
          in: formData
          required: true
          type: string
        - name: lastname
          description: Lastname of the new customer
          in: formData
          required: true
          type: string
        - name: email
          description: Email of the new customer
          in: formData
          required: true
          type: string
        - name: birthdate
          description: Birthdate of the new customer
          in: formData
          required: true
          type: string
        - name: is_active
          description: TRUE if customer is active, else FALSE
          in: formData
          required: true
          type: boolean
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/PostCustomerResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/PostCustomerBadRquestError"

  /customers/{customerId}:
    x-swagger-router-controller: customer_controller
    get:
      tags: ["customers"]
      summary: Get a customer by his ID
      description: Returns a customer by his ID with all basic informations
      operationId: getCustomerById
      parameters:
        - name: customerId
          type: string
          in: path
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GetCustomerResponse"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
    put:
      tags: ["customers"]
      summary: Modify all properties of a customer
      operationId: fullEditCustomer
      parameters:
        - name: customerId
          description: Id of the customer to update
          type: string
          in: path
          required: true
        - name: username
          description: Username of the customer to update
          in: formData
          required: true
          type: string
        - name: password
          description: Password of the customer to update
          in: formData
          required: true
          type: string
        - name: firstname
          description: Firstame of the customer to update
          in: formData
          required: true
          type: string
        - name: lastname
          description: Lastname of the customer to update
          in: formData
          required: true
          type: string
        - name: email
          description: Email of the customer to update
          in: formData
          required: true
          type: string
        - name: birthdate
          description: Birthdate of the customer to update
          in: formData
          required: true
          type: string
        - name: is_active
          description: TRUE if customer is active, else FALSE
          in: formData
          required: true
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/FullEditCustomerResponse"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/FullEditCustomerByIdNotFound"
    patch:
      tags: ["customers"]
      summary: Modify some properties of a customer
      operationId: partialEditCustomer
      parameters:
        - name: customerId
          description: Id of the customer to update
          type: string
          in: path
          required: true
        - name: username
          description: Username of the customer to update
          in: formData
          required: false
          type: string
        - name: password
          description: Password of the customer to update
          in: formData
          required: false
          type: string
        - name: firstname
          description: Firstame of the customer to update
          in: formData
          required: false
          type: string
        - name: lastname
          description: Lastname of the customer to update
          in: formData
          required: false
          type: string
        - name: email
          description: Email of the customer to update
          in: formData
          required: false
          type: string
        - name: birthdate
          description: Birthdate of the customer to update
          in: formData
          required: false
          type: string
        - name: is_active
          description: TRUE if customer is active, else FALSE
          in: formData
          required: true
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PartialEditCustomerResponse"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/PartialEditCustomerByIdNotFound"
    delete:
      tags: ["customers"]
      summary: Delete a specific customer with his Id
      description: Will delete all informations about a specific customer
      operationId: removeCustomer
      parameters:
        - name: customerId
          type: string
          in: path
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DeleteCustomerByIdSuccessOrError"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/DeleteCustomerByIdSuccessOrError"

  /login:
    x-swagger-router-controller: login_controller
    post:
      tags: ["login"]
      summary: Return the loggedIn response
      operationId: login
      parameters:
        - name: username
          description: the username of the customer who want to be logged
          in: formData
          required: true
          type: string
        - name: password
          description: the password of the customer who want to be logged
          in: formData
          required: true
          type: string
          format: password
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LoginResponse"
        400:
          description: Bad Request
          schema:
            required:
              - code
              - loggedIn
              - message
            properties:
              code:
                type: number
              loggedIn:
                type: boolean
              message:
                type: string

  /administrators:
    x-swagger-router-controller: administrator_controller
    post:
      tags: ["admin"]
      summary: Create a new administrator
      operationId: createAdmin
      parameters:
        - name: username
          description: Can be anything you want
          in: formData
          required: true
          type: string
        - name: password
          description: At least 8 chars
          in: formData
          required: true
          type: string
        - name: firstname
          description: Firstame of the new administrator
          in: formData
          required: true
          type: string
        - name: lastname
          description: Lastname of the new administrator
          in: formData
          required: true
          type: string
        - name: email
          description: Email of the new administrator
          in: formData
          required: true
          type: string
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/PostAdministratorResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/PostAdministratorBadRquestError"

  /articles:
    x-swagger-router-controller: article_controller
    get:
      tags: ["articles"]
      summary: Get all articles
      operationId: getAllArticles
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GetArticlesListResponse"

    post:
      tags: ["articles"]
      summary: Create a new article
      operationId: createArticle
      parameters:
        - name: article
          description: An object containing the paramters of the article
          in: body
          required: true
          schema:
            $ref: '#/definitions/ArticleObject'
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/PostArticleResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/PostArticleBadRquestError"

  /articles/{articleId}:
    x-swagger-router-controller: article_controller
    get:
      tags: ["articles"]
      summary: Get an article by his ID
      description: Returns an article by his ID with all basic informations
      operationId: getArticleById
      parameters:
        - name: articleId
          type: string
          in: path
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GetArticleResponse"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags: ["articles"]
      summary: Delete a specific article with his Id
      description: Will delete all informations about a specific article
      operationId: deleteArticleById
      parameters:
        - name: articleId
          type: string
          in: path
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DeleteCustomerByIdSuccessOrError"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/DeleteCustomerByIdSuccessOrError"

  /orders:
    x-swagger-router-controller: order_controller
    get:
      tags: ["orders"]
      summary: Returns all created orders with the basic informations
      operationId: getAllOrders
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GetOrdersListResponse"
    post:
      tags: ["orders"]
      summary: Create a new order
      operationId: createOrder
      parameters:
        - name: customer_id
          description: Can be anything you want
          in: formData
          required: true
          type: string
        - name: password
          description: At least 8 chars
          in: formData
          required: true
          type: string
        - name: firstname
          description: Firstame of the new customer
          in: formData
          required: true
          type: string
        - name: lastname
          description: Lastname of the new customer
          in: formData
          required: true
          type: string
        - name: email
          description: Email of the new customer
          in: formData
          required: true
          type: string
        - name: birthdate
          description: Birthdate of the new customer
          in: formData
          required: true
          type: string
        - name: is_active
          description: TRUE if customer is active, else FALSE
          in: formData
          required: true
          type: boolean
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/PostOrderResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/PostOrderBadRquestError"

  /orders/{orderId}:
    x-swagger-router-controller: order_controller
    patch:
      tags: ["orders"]
      summary: Modify some properties of an order
      operationId: partialEditOrder
      parameters:
        - name: orderId
          description: Id of the order to update
          type: string
          in: path
          required: true
        - name: username
          description: Username of the order to update
          in: formData
          required: false
          type: string
        - name: password
          description: Password of the order to update
          in: formData
          required: false
          type: string
        - name: firstname
          description: Firstame of the order to update
          in: formData
          required: false
          type: string
        - name: lastname
          description: Lastname of the order to update
          in: formData
          required: false
          type: string
        - name: email
          description: Email of the order to update
          in: formData
          required: false
          type: string
        - name: birthdate
          description: Birthdate of the order to update
          in: formData
          required: false
          type: string
        - name: is_active
          description: TRUE if order is active, else FALSE
          in: formData
          required: true
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PartialEditOrderResponse"
        404:
          description: Not Found
          schema:
            $ref: "#/definitions/PartialEditOrderByIdNotFound"
# complex objects have schema definitions
definitions:

  ArticleObject:
    type: object
    required:
      - administrator_id
      - name
      - description
      - price
      - parts
      - sizes
      - colors
    properties:
      administrator_id:
        type: number
      name:
        type: string
      description:
        type: string
      price:
        type: string
      parts:
        type: array
        items:
          type: string
      sizes:
        type: array
        items:
          type: string
      colors:
        type: array
        items:
          type: string

  Error:
    type: object
    properties:
      code:
        type: number
      message:
        type: string
    required:
      - code
      - message

  LoginResponse:
    required:
      - code
      - loggedIn
      - message
    properties:
      code:
        type: number
      loggedIn:
        type: boolean
      message:
        type: string

  GetArticlesListResponse:
    required:
      - code
      - articles
    properties:
      code:
        type: number
      articles:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            administrator_id:
              type: integer
            firstname:
              type: string
            lastname:
              type: string
            username:
              type: string
            pass:
              type: string
            state:
              type: string
            phone:
              type: string
            created_at:
              type: string
            updated_at:
              type: string

  GetOrdersListResponse:
    required:
      - code
      - orders
    properties:
      code:
        type: integer
      orders:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            customer_id:
              type: integer
            customizations_of_order_id:
              type: integer
            is_active:
              type: boolean
            created_at:
              type: string
            updated_at:
              type: string

  GetCustomersListResponse:
    required:
      - code
      - customers
    properties:
      code:
        type: number
      customers:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
            firstname:
              type: string
            lastname:
              type: string
            email:
              type: string
            birthdate:
              type: string
            is_active:
              type: boolean
            created_at:
              type: string
            updated_at:
              type: string

  GetCustomerResponse:
    required:
      - code
      - customer
    type: object
    properties:
      code:
        type: number
      customer:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          birthdate:
            type: string
          is_active:
            type: boolean
          created_at:
            type: string
          updated_at:
            type: string

  GetArticleResponse:
    required:
      - article
    properties:
      article:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          birthdate:
            type: string
          country:
            type: string
          state:
            type: string
          phone:
            type: string
          created_at:
            type: string
          updated_at:
            type: string

  PostCustomerResponse:
    required:
      - code
      - customer
    properties:
      code:
        type: number
      customer:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          birthdate:
            type: string
          country:
            type: string
          state:
            type: string
          phone:
            type: string
          created_at:
            type: string
          updated_at:
            type: string

  PostCustomerBadRquestError:
    required:
      - code
      - type
    type: object
    properties:
      code:
        type: number
      type:
        type: string
      messages:
        type: array
        items:
          type: string
      fields:
        type: array
        items:
          type: string

  FullEditCustomerResponse:
    required:
      - code
      - message
      - customer
    type: object
    properties:
      code:
        type: number
      message:
        type: string
      customer:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          birthdate:
            type: string
          is_active:
            type: boolean
          created_at:
            type: string
          updated_at:
            type: string

  PartialEditCustomerResponse:
    required:
      - code
      - message
      - customer
    type: object
    properties:
      code:
        type: number
      message:
        type: string
      customer:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          birthdate:
            type: string
          is_active:
            type: boolean
          created_at:
            type: string
          updated_at:
            type: string

  FullEditCustomerByIdNotFound:
    required:
      - code
      - message
    type: object
    properties:
      code:
        type: number
      message:
        type: string

  PartialEditCustomerByIdNotFound:
    required:
      - code
      - message
    type: object
    properties:
      code:
        type: number
      message:
        type: string

  DeleteCustomerByIdSuccessOrError:
    required:
      - code
      - message
    type: object
    properties:
      code:
        type: number
      message:
        type: string

  PostAdministratorResponse:
    required:
      - code
      - administrator
    properties:
      code:
        type: number
      administrator:
        type: object
        properties:
          id:
            type: integer
          firstname:
            type: string
          lastname:
            type: string
          email:
            type: string
          created_at:
            type: string
          updated_at:
            type: string

  PostAdministratorBadRquestError:
    required:
      - code
      - type
    type: object
    properties:
      code:
        type: number
      type:
        type: string
      messages:
        type: array
        items:
          type: string
      fields:
        type: array
        items:
          type: string

  PostArticleResponse:
    required:
      - code
      - article
    properties:
      code:
        type: number
      article:
        type: object
        properties:
          id:
            type: number
          administrator_id:
            type: number
          name:
            type: string
          description:
            type: string
          price:
            type: string
          parts:
            type: array
            items:
              type: string
          sizes:
            type: array
            items:
              type: string
          colors:
            type: array
            items:
              type: string
          created_at:
            type: string
          updated_at:
            type: string

  PostArticleBadRquestError:
    required:
      - code
      - message
    type: object
    properties:
      code:
        type: number
      message:
        type: string
